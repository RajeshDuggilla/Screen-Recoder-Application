let video = document.querySelector("video");
let recordBtnCont = document.querySelector(".record-btn-cont");
let recordBtn = document.querySelector(".record-btn");
let captureBtnCont = document.querySelector(".capture-btn-cont");
let captureBtn = document.querySelector(".capture-btn");

let transparentColor = "transparent";


let recordFlag = false;

let recorder;
let chunks = []; //media player store in chuck
// constraints is a object
let constraints = {
    audio : false,
    video : true,
}

// navigator is a global object where this gives about browser info

navigator.mediaDevices.getUserMedia(constraints)   //Api
.then((stream)=>{
    video.srcObject = stream;
    // video.play();

    recorder = new MediaRecorder(stream);
    recorder.addEventListener("start", (e)=>{
        chunks = [];
    });
    recorder.addEventListener("dataavailable", (e)=>{
        chunks.push(e.data);
    });
    recorder.addEventListener("stop", (e)=>{
        //convert media chucks data to video
        let blob = new Blob(chunks, {type:"video/mp4"});
        let videoURL = URL.createObjectURL(blob);
        let a = document.createElement('a');
        a.href = videoURL;
        a.download ="stream.mp4";
        a.click();
    });
    
    recordBtnCont.addEventListener("click",(e)=>{
        if(!recorder) return;
       
        recordFlag = !recordFlag;
        if(recordFlag){
            recorder.start();
            recordBtn.classList.add("scale-record");
            startTimer();
        }
        else{
            recorder.stop();
            recordBtn.classList.remove("scale-record");
            stopTimer();
        }
        
    });
});
let timerID;
let counter = 0;
let timer = document.querySelector("timer");
function startTimer(){
    timer.style.display="block";
    function displayTimer(){
        let totalSeconds = counter;
        let hours = Number.parseInt(totalSeconds / 3600);
        totalSeconds = totalSeconds%3600;
        let mintues = Number.parseInt(totalSeconds / 60);
        totalSeconds = totalSeconds / 60;
        let seconds = totalSeconds;
        hours = (hours < 10) ? `0 ${hours}` : hours;
        mintues = (mintues < 10)? `0 ${mintues}` : mintues;
        seconds = (seconds < 10)? `0 ${seconds}` : seconds;
        timer.innerHTML = `${hours}:${mintues}:${seconds}`;
        counter++;
    }
    timerID = setInterval(displayTimer,1000);
}

function stopTimer(){
    clearInterval(timerID);
    timer.innerText = "00:00:00";
    timer.style.display="none";
}

// video is actually captured as chunks, but what these chunks will have?
// each chuck will be having a frame, Image is actually a frame.

captureBtnCont.addEventListener("click",(e)=>{
    captureBtnCont.classList.add("scale-capture"); //adding animations

    let canvas = document.createElement("canvas");
    canvas.width = video.videoWidth;
    canvas.height = video.videoHeight;
    let imageURL = canvas.toDataURL("image/jpeg",1.0);
    // canvas.getContext("2d").drawImage(video,0,0);
    let tool = canvas.getContext("2d");
    tool.drawImage(video,0,0,canvas.width,canvas.height);
    //filtering the image
    tool.fillStyle = transparentColor;
    tool.fillRect(0,0,canvas.width,canvas.height);
    let a = document.createElement('a');
    a.href = imageURL;
    a.download ="Image.jpeg";
    a.click();
    //remove animations
    setTimeout(()=>{
        captureBtn.classList.remove("scale-capture");
    },500); // delay of 500 milli seconds

});

//filtering logic

let filter = document.querySelector(".filter-layer");

let allFilters = document.querySelectorAll(".filter");
allFilters.forEach((filterElem)=>{
   filterElem.addEventListener("click",(e)=>{
     //get style
     transparentColor = getComputedStyle(filterElem).getPropertyValue("background-color");
     filter.style.backgroundColor = transparentColor;
   });
});
